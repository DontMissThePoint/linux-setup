Normal Mode
***********

- ^E/^Y - scroll up/down while leaving the cursor where it is
- ^H/^M/^L - move cursore to the top/middle/bottom of the page
- gg - move to the top of the page
- ^F/^B - page up/down

Objects
*******

- w - words
- s - sentences
- p - paragraphs
- t - tags

Motions
*******

- a - all
- i - in
- t - till
- f - find forward
- F - find backward

Commands
********

- d - delete
- c - change (after that we are in insert mode)
- y - yank
- v - visually select

- dd/yy - delete/yank the current line
- D/Y - delete/yank till end of the current line
- p/P - paster bellow/above current line
- ^/$ - move the beginning/end of the current line
- I/A - as ^/$ but put you into insert mode

- m{register} - mark current line to a register
- '{register} - go to the register

Saving vim session
******************

- :mks {file} - saves the current vim session to a file
- vim -S {file} - run vim while loading a session from the file
- mks! - rewrites the sessio file

Registers
*********

- :reg - list all registers
- "{register} - adressing the register
- "{register}y - yank selected text into the register
- "{register}p - paste the register

Command examples
----------------

- diw - delete in word
- ciw - change in word (we are in insert after that)
- ci) - delete text within brackets we are in and insert
- ca) - delete text within brackets (/w brackets) we are in and insert
- dt_ - delete until space
- df_ - delete until space including space
- va) - visually select all in brackets

DOT COMMAND
-----------

- . repeat the last motion

TimeMachine
***********

- :earlier 2m - will go 2m back in time

Macros
******

- q{register} - recording macro 
- q - stop recording
- @{register} - play recording

Visual mode
***********
- v/^v/V visual/block visual/line visual
 
When in visual, typing :normal {command} will run the command on every line just like in normal mode
